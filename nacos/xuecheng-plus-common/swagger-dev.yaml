# ========================================================================
# Nacos公共配置文件：swagger-dev.yaml
# ========================================================================
# 
# 使用说明：
# 1. 登录Nacos控制台：http://114.132.63.109:8848/nacos
# 2. 左侧菜单：配置管理 → 配置列表
# 3. 切换到命名空间：dev-xuecheng
# 4. 点击右上角"+"按钮，创建配置
# 5. 填写配置信息：
#    - Data ID: swagger-dev.yaml
#    - Group: XUECHENG-PLUS-COMMON  ⚠️ 注意：使用COMMON分组
#    - 配置格式: YAML
# 6. 将下面的内容复制粘贴到"配置内容"框中
# 7. 点击"发布"
#
# ⚠️ 公共配置说明：
# - 这是所有微服务共享的配置
# - 使用独立的分组：XUECHENG-PLUS-COMMON
# - 所有API层微服务都引用这个配置
#
# ========================================================================

# ========== Knife4j接口文档配置 ==========
# 说明：Knife4j是Swagger的增强版，提供更好的API文档界面
knife4j:
  # 是否启用Knife4j
  enable: true
  # 界面设置
  setting:
    # 界面语言（中文）
    language: zh_cn

# ========== Swagger API文档配置 ==========
# 说明：Swagger用于生成RESTful API文档
# Knife4j兼容Swagger配置
swagger:
  # API文档标题（公共配置，适用于所有微服务）
  # 讲师强调：不能写"内容管理系统"，因为其他模块也会用
  title: "学成在线项目接口文档"
  # API文档描述
  description: "学成在线项目所有微服务的API接口文档"
  # ⚠️ 扫描包路径：不能限定为com.xuecheng.content
  # 讲师原话："你不能限制content，因为媒资模块的包路径不是content"
  # 解决方案：不配置base-package，或配置为com.xuecheng（扫描所有子包）
  base-package: com.xuecheng
  # 是否启用Swagger
  enabled: true
  # API版本号
  version: 1.0.0

# ========================================================================
# 使用场景
# ========================================================================
#
# 1. 哪些微服务需要引用？
#    - content-api（内容管理API）
#    - media-api（媒资管理API）
#    - system-api（系统管理API）
#    - 所有对外提供HTTP接口的API层微服务
#
# 2. 如何引用？
#    在各微服务的bootstrap.yml中配置：
#    spring:
#      cloud:
#        nacos:
#          config:
#            shared-configs:
#              - data-id: swagger-dev.yaml
#                group: XUECHENG-PLUS-COMMON
#                refresh: true
#
# 3. 为什么要抽取成公共配置？
#    讲师原话："所有的接口微服务都需要Swagger文档，
#    很显然，我们应该把这些配置做成公共配置，
#    让其他微服务去引用"
#
# 4. 配置修改后的影响：
#    ✅ 修改一次，所有微服务生效
#    ✅ 统一管理，降低维护成本
#    ✅ 避免重复配置，符合DRY原则
#
# ========================================================================

