# ========================================================================
# Nacos公共配置文件：logging-dev.yaml
# ========================================================================
# 
# 使用说明：
# 1. 登录Nacos控制台：http://114.132.63.109:8848/nacos
# 2. 左侧菜单：配置管理 → 配置列表
# 3. 切换到命名空间：dev-xuecheng
# 4. 点击右上角"+"按钮，创建配置
# 5. 填写配置信息：
#    - Data ID: logging-dev.yaml
#    - Group: XUECHENG-PLUS-COMMON  ⚠️ 注意：使用COMMON分组
#    - 配置格式: YAML
# 6. 将下面的内容复制粘贴到"配置内容"框中
# 7. 点击"发布"
#
# ⚠️ 公共配置说明：
# - 这是所有微服务共享的日志配置
# - 使用独立的分组：XUECHENG-PLUS-COMMON
# - 所有微服务都引用这个配置
#
# ========================================================================

# ========== Spring日志输出配置 ==========
spring:
  # 启用ANSI彩色日志输出（在控制台显示彩色日志）
  output:
    ansi:
      enabled: ALWAYS

# ========== Log4j2日志配置 ==========
# 说明：Log4j2日志框架配置
logging:
  # 日志配置文件路径
  # 说明：这个log4j2-dev.xml文件在各微服务的resources目录下
  config: classpath:log4j2-dev.xml
  # 日志级别配置
  level:
    # 项目包日志级别（DEBUG级别，输出详细信息）
    # 开发环境使用DEBUG，生产环境建议改为INFO或WARN
    com.xuecheng: DEBUG
    # Mapper接口日志级别（DEBUG级别，输出SQL语句）
    # 开发环境可以看到SQL，生产环境建议改为INFO
    com.xuecheng.content.mapper: DEBUG
    # 可以根据需要添加其他包的日志级别
    # com.xuecheng.media.mapper: DEBUG
    # com.xuecheng.system.mapper: DEBUG

# ========================================================================
# 使用场景
# ========================================================================
#
# 1. 哪些微服务需要引用？
#    - content-api（内容管理API）
#    - content-service（内容管理Service）
#    - media-api（媒资管理API）
#    - system-api（系统管理API）
#    - 所有需要日志的微服务（基本是所有微服务）
#
# 2. 如何引用？
#    在各微服务的bootstrap.yml中配置：
#    spring:
#      cloud:
#        nacos:
#          config:
#            shared-configs:
#              - data-id: logging-dev.yaml
#                group: XUECHENG-PLUS-COMMON
#                refresh: true
#
# 3. 为什么要抽取成公共配置？
#    讲师原话："所有的微服务都需要日志，
#    很显然，我们应该把日志配置做成公共配置，
#    让所有微服务引用"
#
# 4. 不同环境的配置：
#    - logging-dev.yaml：开发环境（DEBUG级别）
#    - logging-test.yaml：测试环境（INFO级别）
#    - logging-prod.yaml：生产环境（WARN或ERROR级别）
#
# 5. 配置热更新：
#    如果需要临时调整某个包的日志级别：
#    - 在Nacos修改配置
#    - 点击发布
#    - 服务自动刷新（如果配置了refresh: true）
#    - 无需重启服务
#
# ========================================================================

